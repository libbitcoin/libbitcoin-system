<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Label="Globals">
    <_PropertySheetDisplayName>Libbitcoin System Import Settings</_PropertySheetDisplayName>
  </PropertyGroup>

  <!-- User Interface -->

  <ItemGroup Label="BuildOptionsExtension">
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)libbitcoin-system.import.xml" />
  </ItemGroup>
  
  <!-- Options -->

  <!-- These create non-portability. -->
  <!-- These will compile to the target regardless of the compiling platform. -->
  <!-- That will result in a crash of test/executable execution if mismatched. -->
  <PropertyGroup>
    <Option-avx512>false</Option-avx512>
    <Option-avx2>true</Option-avx2>
    <Option-sse41>true</Option-sse41>
    <Option-shani>false</Option-shani>
    <Option-neon>false</Option-neon>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <!-- order matters -->
      <EnableEnhancedInstructionSet Condition="'$(Option-avx2)'   == 'true'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <EnableEnhancedInstructionSet Condition="'$(Option-avx512)' == 'true'">AdvancedVectorExtensions512</EnableEnhancedInstructionSet>
    </ClCompile>
  </ItemDefinitionGroup>

  <!-- Messages -->

  <Target Name="OptionInfo" BeforeTargets="PrepareForBuild">
    <Message Text="Option-avx512     : $(Option-avx512)" Importance="high"/>
    <Message Text="Option-avx2       : $(Option-avx2)" Importance="high"/>
    <Message Text="Option-sse41      : $(Option-sse41)" Importance="high"/>
    <Message Text="Option-shani      : $(Option-shani)" Importance="high"/>
    <Message Text="Option-neon       : $(Option-neon)" Importance="high"/>
  </Target>  

  <!-- Linkage -->

  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)..\..\..\..\..\libbitcoin-system\include\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <!-- WITH_ICU always defined in Visual Studio builds. -->
      <!-- NOMINMAX enables use of std::min/max without conflict. -->
      <!-- WIN32_LEAN_AND_MEAN avoids inclusion of certain headers, winsock.h conflicts with boost and protocol use of winsock2.h. -->
      <PreprocessorDefinitions>WITH_ICU;WIN32_LEAN_AND_MEAN;NOMINMAX;_WIN32_WINNT=0x0600;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- Disable auto-linking for all boost-json and its dependency boost-container so they can be header only. -->
      <PreprocessorDefinitions>BOOST_JSON_NO_LIB;BOOST_CONTAINER_NO_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Linkage-libbitcoin-system)' == 'static' Or '$(Linkage-libbitcoin-system)' == 'ltcg'">BC_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="$(Configuration.IndexOf('Debug')) != -1">_CRTDBG_MAP_ALLOC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- Enable use of CPU intrinsics. -->
      <PreprocessorDefinitions Condition="'$(Option-avx512)' == 'true'">WITH_AVX512;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Option-avx2)'   == 'true'">WITH_AVX2;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Option-sse41)'  == 'true'">WITH_SSE41;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Option-shani)'  == 'true'">WITH_SHANI;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Option-neon)'   == 'true'">WITH_NEON;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>    
    <Link>
      <!-- 4099: warns about missing PDB files. -->
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
    </Link>  
    <Link>
      <AdditionalDependencies Condition="'$(Linkage-libbitcoin-system)' != ''">libbitcoin-system.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Link>
      <AdditionalLibraryDirectories Condition="$(Configuration.IndexOf('Debug')) != -1">
        $(ProjectDir)..\..\..\..\..\libbitcoin-system\bin\$(PlatformName)\Debug\$(PlatformToolset)\$(Linkage-libbitcoin-system)\;
        $(ProjectDir)..\..\..\..\..\libbitcoin-system\obj\libbitcoin-system\$(PlatformName)\Debug\$(PlatformToolset)\$(Linkage-libbitcoin-system)\;%(AdditionalLibraryDirectories)
      </AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories Condition="$(Configuration.IndexOf('Release')) != -1">
        $(ProjectDir)..\..\..\..\..\libbitcoin-system\bin\$(PlatformName)\Release\$(PlatformToolset)\$(Linkage-libbitcoin-system)\;
        $(ProjectDir)..\..\..\..\..\libbitcoin-system\obj\libbitcoin-system\$(PlatformName)\Release\$(PlatformToolset)\$(Linkage-libbitcoin-system)\;%(AdditionalLibraryDirectories)
      </AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
</Project>
